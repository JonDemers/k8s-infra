apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: apache-ingress
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: apache-service
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: apache-service
spec:
  selector:
    app: apache
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: apache-persistent-volume
  labels:
    type: local
spec:
  claimRef:
    namespace: default
    name: apache-persistent-volume-claim
  storageClassName: manual
  capacity:
    storage: 20Gi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: "/mnt/sdb1/apache"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: apache-persistent-volume-claim
spec:
  volumeName: apache-persistent-volume
  storageClassName: manual
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apache-deployment
  labels:
    app: apache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apache
  template:
    metadata:
      labels:
        app: apache
    spec:
      volumes:
      - name: apache-volume
        persistentVolumeClaim:
          claimName: apache-persistent-volume-claim
      containers:
      - name: apache
        image: "$DOCKER_IMAGE"
        ports:
        - name: http
          containerPort: 80
        volumeMounts:
        - mountPath: "/var/log/apache2"
          name: apache-volume
        resources:
          requests:
            cpu: 100m
          limits:
            cpu: 1000m
        envFrom:
        - secretRef:
            name: apache-secret
        readinessProbe:
          httpGet:
            path: /
            port: http
          failureThreshold: 1
          periodSeconds: 10
